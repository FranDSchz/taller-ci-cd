name: CI/CD - Node.js App

on:
  pull_request:
    branches: [main]
  push:
    branches: [ main ]

jobs:
  build:
    name: ðŸ”§ Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # La clave estÃ¡ aquÃ­: activa la cachÃ©.

      - name: Install dependencies
        run: npm ci
      - name: Notify Slack - Build
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          author_name: 'ðŸ”§ Build'
          job_name: ðŸ”§ Build
          fields: repo,message,commit,author,eventName,ref,took
          mention: 'here'
          if_mention: failure
          icon_emoji: ':hammer_and_wrench:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


  lint:
    name: ðŸ§¼ Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' 
      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint .

      - name: Notify Slack - Lint
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          author_name: 'ðŸ§¼ Lint'
          job_name: ðŸ§¼ Lint
          fields: took
          icon_emoji: ':broom:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  test:
    name: ðŸ§ª Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # Y usamos la cachÃ© aquÃ­ tambiÃ©n.

      # Este paso tambiÃ©n serÃ¡ muy rÃ¡pido.
      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Notify Slack - Test
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          author_name: 'ðŸ§ª Test'
          job_name: ðŸ§ª Test
          fields: took
          icon_emoji: ':test_tube:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run tests with coverage
        run: npm test -- --coverage
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    name: ðŸš€ Deploy to Render
    needs: sonarcloud
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy Hook
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
      - name: Notify Slack - Deploy
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          author_name: 'ðŸš€ Deploy'
          job_name: ðŸš€ Deploy to Render
          fields: took
          icon_emoji: ':rocket:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}