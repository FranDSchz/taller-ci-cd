name: CI/CD - Node.js App

on:
  push:
    branches: [ main ]

jobs:
  # El primer job sigue siendo el mismo, instala y cachea.
  build:
    name: üîß Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # La clave est√° aqu√≠: activa la cach√©.

      - name: Install dependencies
        run: npm ci

      # Ya no subimos 'node_modules' como artefacto.
      # Podr√≠as subir aqu√≠ artefactos de build si tu app los generara (ej: una carpeta 'dist').

      - name: Notify Slack - Build
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          author_name: 'üîß Build'
          job_name: üîß Build
          fields: repo,message,commit,author,eventName,ref,took
          mention: 'here'
          if_mention: failure
          icon_emoji: ':hammer_and_wrench:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Los jobs de lint y test ahora vuelven a tener sus propios pasos de instalaci√≥n,
  # pero ser√°n muy r√°pidos gracias a la cach√©.
  lint:
    name: üßº Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # Usamos la misma cach√©.

      # Este paso ser√° casi instant√°neo si la cach√© existe.
      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint .

      - name: Notify Slack - Lint
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          author_name: 'üßº Lint'
          job_name: üßº Lint
          fields: commit,took
          icon_emoji: ':broom:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  test:
    name: üß™ Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # Y usamos la cach√© aqu√≠ tambi√©n.

      # Este paso tambi√©n ser√° muy r√°pido.
      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Notify Slack - Test
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          author_name: 'üß™ Test'
          job_name: üß™ Test
          fields: commit,took
          icon_emoji: ':test_tube:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run tests with coverage
        run: npm test -- --coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}